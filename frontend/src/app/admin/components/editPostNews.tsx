"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import dynamic from "next/dynamic";
import "quill/dist/quill.snow.css";
import newsService from "../services/NewsService";
import slugify from "slugify";

const ReactQuill = dynamic(() => import("react-quill"), { ssr: false });

// üìù Quill modules cho "N·ªôi dung b√†i vi·∫øt" (ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng)
const fullModules = {
  toolbar: {
    container: [
      ["bold", "italic", "underline"],
      ["link", "image"],
      [{ list: "ordered" }, { list: "bullet" }],
      ["blockquote"],
      [{ align: [] }],
      [{ header: "1" }, { header: "2" }, { font: [] }],
    ],
    handlers: {
      image: function () {
        const editor = this.quill;
        const imageUrl = prompt("Nh·∫≠p URL c·ªßa h√¨nh ·∫£nh:");
        if (imageUrl) {
          const range = editor.getSelection();
          editor.insertEmbed(range.index, "image", imageUrl);
        }
      },
    },
  },
};

// üìù Quill modules cho "T√≥m t·∫Øt b√†i vi·∫øt" (ch·ªâ h·ªó tr·ª£ vƒÉn b·∫£n ƒë∆°n gi·∫£n)
const textOnlyModules = {
  toolbar: [["bold", "italic", "underline"], ["blockquote"]],
};

// üñºÔ∏è Quill modules cho "H√¨nh ·∫£nh t√≥m t·∫Øt" (ch·ªâ c√≥ ch·ª©c nƒÉng ch√®n ·∫£nh)
const imageOnlyModules = {
  toolbar: {
    container: [["image"]],
    handlers: {
      image: function () {
        const editor = this.quill;
        const imageUrl = prompt("Nh·∫≠p URL c·ªßa h√¨nh ·∫£nh:");
        if (imageUrl) {
          editor.setContents([{ insert: { image: imageUrl } }]); // Ch·ªâ ch√®n h√¨nh ·∫£nh
        }
      },
    },
  },
};

export default function EditPost({ id, onClose, onSuccess }) {
  const [author, setAuthor] = useState("");
  const [title, setTitle] = useState("");
  const [slug, setSlug] = useState("");
  const [content, setContent] = useState("");
  const [summary, setSummary] = useState("");
  const [imageSummary, setImageSummary] = useState("");
  const [status, setStatus] = useState(false);

  useEffect(() => {
    async function fetchPost() {
      if (!id) return;
      try {
        const post = await newsService.getNewsById(id);
        setAuthor(post.author);
        setTitle(post.title);
        setSlug(post.slug);
        setContent(post.content);
        setSummary(post.summary);
        setImageSummary(post.imageSummary);
        setStatus(post.status === 1);
      } catch (error) {
        console.error("L·ªói t·∫£i b√†i vi·∫øt", error);
      }
    }
    fetchPost();
  }, [id]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    const updatedData = { author, title, slug, content, summary, imageSummary, status: status ? 1 : 0 };
    try {
      await newsService.updateNews(id, updatedData);
      alert("B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
      onSuccess(); // Load l·∫°i danh s√°ch tin t·ª©c
      onClose(); // ƒê√≥ng modal sau khi c·∫≠p nh·∫≠t th√†nh c√¥ng
    } catch (error) {
      alert("C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
    }
  };

  return (
    <div className="container mx-auto p-4 max-w-3xl bg-white shadow rounded">
      <h1 className="text-center text-2xl font-bold mb-4">Ch·ªânh S·ª≠a B√†i Vi·∫øt</h1>
      <form onSubmit={handleSubmit}>
        <input type="text" placeholder="T√™n ng∆∞·ªùi ƒëƒÉng b√†i" className="w-full p-2 border rounded mb-3" value={author} onChange={(e) => setAuthor(e.target.value)} required />
        <input type="text" placeholder="Ti√™u ƒë·ªÅ" className="w-full p-2 border rounded mb-3" value={title} onChange={(e) => setTitle(e.target.value)} required />
        <input type="text" placeholder="Slug URL" className="w-full p-2 border rounded mb-3" value={slug} onChange={(e) => setSlug(e.target.value)} required />

        <label className="block font-bold mb-2">N·ªôi dung b√†i vi·∫øt:</label>
        <ReactQuill value={content} onChange={setContent} modules={fullModules} className="mb-4" />
        
        {/* üìù Quill nh∆∞ng ch·ªâ h·ªó tr·ª£ vƒÉn b·∫£n ƒë∆°n gi·∫£n */}
        <label className="block font-bold mb-2">T√≥m t·∫Øt b√†i vi·∫øt:</label>
        <ReactQuill value={summary} onChange={setSummary} modules={textOnlyModules} className="mb-4" />

        {/* üñºÔ∏è Quill nh∆∞ng ch·ªâ c√≥ t√≠nh nƒÉng ch√®n ·∫£nh */}
        <label className="block font-bold mb-2">H√¨nh ·∫£nh t√≥m t·∫Øt:</label>
        <ReactQuill value={imageSummary} onChange={setImageSummary} modules={imageOnlyModules} className="mb-4" />
        
        <label className="block font-bold mb-2 flex items-center">
          <input type="checkbox" className="mr-2" checked={status} onChange={(e) => setStatus(e.target.checked)} />
          K√≠ch ho·∫°t b√†i vi·∫øt
        </label>
        
        <button type="submit" className="w-full bg-blue-500 text-white p-2 rounded">C·∫≠p Nh·∫≠t</button>
      </form>
    </div>
  );
}
